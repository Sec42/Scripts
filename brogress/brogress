#!/bin/sh

delay=1
autodelay=3
tfile=`mktemp`

if [ ! -x "$(which dc)" ] ; then
  echo "required dc binary not found." >&2
  exit 1
fi

gfile(){
#tfile=`mktemp`
msize=0
mname=none
# Need to do it with tmpfile because of sh subshell stupidity
lsof -s -F nfs / | \
while read line ; do
    case $line in
		p*) pid=${line#p};;
		f*) fd=${line#f};;
		s*) size=${line#s};;
		n*) name=${line#n}
#			echo $pid $name $size / $mname $msize >&2
			if [ "${fd}" = "txt" ] ; then
				continue
			fi
			if [ "${name}" = "/" ] ; then
				continue
			fi
			if [ "${name#/usr/lib}" != "${name}" ] ; then
				continue
			fi
			if [ "${name#/lib}" != "${name}" ] ; then
				continue
			fi
			if [ $size -gt $msize ] ; then
				msize=$size
				mname=$name
			fi
			size=0
			name=undef
			echo $mname
			;;
		*) echo "Unknown $line";;
	esac
done |tail -1
}

file=$1
termcap=true
tput ho 2>/dev/null || termcap=false

if [ -z "$file" ] ; then
	file=$(gfile)
fi

if [ X"$file" = X"-a" ] ; then
	auto=$autodelay
fi

size=$(wc -c $file|awk '{print $1}')

process(){
	off=$1
	cmd=$2
	pid=$3
	fd=$4

    case $off in
		0t*) off=${off#0t};;
		0x*) off=$(echo "16i ${off#0x} p"|tr a-f A-F|dc);;
	esac

	x=$(eval echo \$o_$pid)
	if [ -z "$x" ] ; then
	  eval o_$pid=$off
	  sts=$pts
	fi

	odiff=$(echo $off $(eval echo \$o_$pid) - p | dc)
	tdiff=$(echo $pts $sts - p |dc )
	sdiff=$(echo "$size $off - p" |dc)

	eta=""
	if [ "$odiff" -gt 0 -a "$sdiff" -ne 0 ] ; then
		eta="$(echo "0 0 $sdiff $tdiff * $odiff / p"|dc)"

		etam=$(echo $eta 60 / p |dc)
		etas=$(echo "$eta $etam 60 * - p"|dc)

		etah=$(echo $etam 60 / p |dc)
		etam=$(echo "$etam $etah 60 * - p"|dc)

		etap=$(printf "%02ds" $etas)
		if [ "$etah" -gt 0 ] ; then
			etap=$(printf "%dh %02d:%02d" $etah $etam $etas)
		else
			if [ "$etam" -gt 0 ] ; then
				etap=$(printf "%2dm%02d" $etam $etas)
			else
				etap=$(printf "%2ds" $etas)
			fi
		fi
		etap="ETA: $etap"
	fi

	sfx="B"
	if [ "$tdiff" -gt 0 ] ; then
	   odiff="$(echo $odiff $tdiff / p |dc)"
	   sfx="$sfx/s"
	fi
    if [ "$odiff" -gt 1000000 ] ; then
       odiff=$(echo 2k $odiff 1024 / 1024 / p|dc)
	   sfx="M$sfx"
    else
		if [ "$odiff" -gt 2000 ] ; then
		   odiff=$(echo 2k $odiff 1024 / p|dc)
		   sfx="k$sfx"
		fi
    fi

	pct=$(echo "1k $off 100 * $size / p"|dc)
	echo -n $(printf "%15s: %6s %s %s $sfx %s$el" "$cmd($pid)" "$pct%" "($off)" "$odiff" "$etap")
	$termcap && tput ce || tput el
	echo
};

end(){
	echo
	echo
	echo -n "Abort!"
	$termcap && tput ce ve || (tput el ;tput cnorm)
	echo
	exit
}

alm(){
	nfile=$(gfile)
	if [ "${nfile}" != "${file}" ] ; then
		file=$nfile
		size=$(wc -c $file|awk '{print $1}')
		$termcap && tput cl vi || (tput clear ; tput civis)
		echo "Progress for file: ${file##*/} ($size)"
	fi
	[ ! -z "$auto" ] && (sleep $auto; kill -USR1 $pid 2>/dev/null ) &
}

trap end 2
trap alm USR1

pid=$$
[ ! -z "$auto" ] && (kill -USR1 $pid) &

$termcap && tput cl vi || (tput clear ; tput civis)
echo "Progress for file: ${file##*/} ($size)"

while : ; do
  $termcap && tput ho || tput home
  echo
  pts=$(date +%s)
  lsof -o -F co $file > $tfile 2>/dev/null
  while read line ; do
    case $line in
		c*) cmd=${line#c};;
		p*) pid=${line#p};;
		f*) fd=${line#f};;
		o*) off=${line#o}
			process "$off" "$cmd" "$pid" "$fd"
			;;
		*) echo "Unknown $line";;
	esac
  done <$tfile
  $termcap && tput cd || tput ed
  sleep $delay
done
