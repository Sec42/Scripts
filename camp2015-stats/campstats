#!/usr/bin/perl -CSAL

use LWP::Simple;
use XML::LibXML;
use Data::Dumper;
use constant VERBOSE=>0;

my $parser = XML::LibXML->new();
$parser->keep_blanks(0);

my $rdoc;
if (defined $ARGV[0]){
	$rdoc = $parser->parse_file( shift );
}else{
	$rdoc = $parser->load_xml(string => get("https://tickets.events.ccc.de/media/chart_single.svg"));
 	# or .../chart_avg.svg 
}

# XXX: XPath V1 is broken (by specification) with regards to
# empty namespace prefixes with an non-empty namespace URI.
#
# Unfortunately neither LibXML, nor the perl bindings 
# have the guts to provide a simple fix, so we're stuck with this ugly
# workaround and have to sprinkle "x:" everywhere.

my $doc = XML::LibXML::XPathContext->new($rdoc);
$doc->registerNs('x', $rdoc->documentElement()->namespaceURI());

my %fun;
my $prev=0;

foreach my $c ( $doc->findnodes('//*/x:g[contains(@class,"legend ")]') ){
	my $id=$c->findvalue('@id');
	my $title= $c->findvalue('*/text()');
	$id=~s/activate-//;
	$title=~s/Merchandi.M/M/; # XXX: fix broken "Merchandise" label
	print "$title:\n" if (VERBOSE);
	foreach my $d ( $doc->findnodes('//*/x:g[contains(@class,"'.$id.'")]/x:g/x:desc[@class="value"]/text()') ){
		print "\t",$d,"\n" if (VERBOSE);
		$fun{$title}=$d->nodeValue;
	}
	$fun{$title}-=$prev;
	$prev+=$fun{$title};
}

my $sum=0;
for (sort {$fun{$b} <=> $fun{$a}} keys %fun){
	printf "%-12s%8d\n",$_.":",$fun{$_};
	$sum+=$fun{$_};
}
print "\n";
printf "%-11s%9d\n","Total:", $sum;
printf "%-14s%5.1f%%\n","Profitability:", $sum/950000 *100; 
print "\n";
	
for (sort {$fun{$b} <=> $fun{$a}} keys %fun){
	printf "%-12s%5.1f%%\n",$_.":",$fun{$_}/$sum*100;
}

